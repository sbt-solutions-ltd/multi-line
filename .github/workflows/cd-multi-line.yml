# Name of the Workflow
name: CD TEST

on:
  #Start workflow manually only from main/master, stage and production branches only.
  workflow_dispatch:
    branches:
      - 'testing'
    inputs:
      environment:
        description: 'The environment Terraform should build: development, testing or production'
        type: choice
        options:
        - development
        - testing
        - production
        required: false
        default: 'development'


jobs:
  ssh_key_convert:
    runs-on: ubuntu-latest
    name: A job to pass environment variables based on branches and Terraform environment
    steps:
      - uses: actions/checkout@v2

       # Calling the action
      - id: envs
        uses: zerodt-io/multi-line@v1.3
        with:
          SSH-KEY-DEV: ${{ secrets.KEY }}
          SSH-KEY-TEST: ${{ secrets.KEY_TEST }}
          SSH-KEY-STAGE: ${{ secrets.KEY_STAGE }}
          SSH-KEY-PROD: ${{ secrets.KEY_PROD }}
          SG-ID-DEV: ${{ secrets.SG_ID }}
          SG-ID-TEST: ${{ secrets.SG_ID_TEST }}
          SG-ID-STAGE: ${{ secrets.SG_ID_STAGE }}
          SG-ID-PROD: ${{ secrets.SG_ID_PROD }}
          BASTION-IP-DEV: ${{ secrets.BASTION_IP }}
          BASTION-IP-TEST: ${{ secrets.BASTION_IP_TEST }}
          BASTION-IP-STAGE: ${{ secrets.BASTION_IP_STAGE }}
          BASTION-IP-PROD: ${{ secrets.BASTION_IP_PROD }}
          REGION-DEV: us-east-2
          REGION-TEST: us-east-2
          REGION-STAGE: us-east-1
          REGION-PROD: eu-north-1

       # The outputs the action produces
      - run: |
          echo "New key is ${{ steps.envs.outputs.SSH-KEY-SINGLE }}"
          echo "New branch is ${{ steps.envs.outputs.ENV_BRANCH }}"
          echo "New region is ${{ steps.envs.outputs.ENV_REGION }}"
          echo "New IP is ${{ steps.envs.outputs.BASTION_IP }}"
          echo "New SG ID is ${{ steps.envs.outputs.SG_ID }}"
        shell: bash